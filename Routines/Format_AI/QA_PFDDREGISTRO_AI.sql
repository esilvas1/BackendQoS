CREATE OR REPLACE PROCEDURE BRAE.QA_PFDDREGISTRO_AI(FECHAOPERACION IN DATE, EXISTENCIA OUT NUMBER)
AS

MAX_PERIODO_TC1 NUMBER;
CANT_REG_AI     NUMBER;

BEGIN

-- MAX PERIODO TC1
    SELECT MAX(TC1_PERIODO)
    INTO MAX_PERIODO_TC1
    FROM BRAE.QA_TTC1;
   
   	DELETE FROM QA_TFDDREGISTRO_AI 
   	WHERE ROWNUM >= 0;
    COMMIT;

    --AGREGA INFORMACION A LA TABLA DE REGISTRO PARA SU POSTERIOR ANALISIS
    INSERT INTO QA_TFDDREGISTRO_AI 
    SELECT I.MINICIAL      AS FDD_CODIGOEVENTO
          ,I.FINICIAL      AS FDD_FINICIAL
          ,(CASE WHEN I.FFINAL IS NULL 
          		 THEN SYSDATE 
          		 ELSE I.FFINAL 
          	END)	 	   AS FDD_FFINAL
          ,M.DESCRIPTIO    AS FDD_DECRIPCION
          ,'A'             AS FDD_CAUSANTE_AFECTADO
          ,I.TRAFO         AS FDD_CODIGOELEMENTO
          ,'1'             AS FDD_TIPOELEMENTO
          ,C.FDC_CAUSA_015 AS FDD_CAUSA_CREG
          ,SYSDATE         AS FDD_FESTIMADA --RECIBIR POR INTERFACE COMO DATO DE ENTRADA
          ,CANT_USRS       AS FDD_AFECTADOS
          ,NULL            AS FDD_AFECTADOS_TOTALES --REALIZADA POR PROCEDIMIENTO
    FROM OMS.INTERUPC I
    LEFT OUTER JOIN OMS.MANIOBRAS M ON M.CODE=I.MINICIAL
    LEFT OUTER JOIN BRAE.QA_TFDDCAUSAS C ON C.FDC_CAUSA_OMS = M.CAUSA
    LEFT OUTER JOIN (
                     SELECT  TC1_CODCONEX,COUNT(TC1_CODCONEX) AS CANT_USRS
                     FROM QA_TTC1
                     WHERE TC1_PERIODO = MAX_PERIODO_TC1
                     GROUP BY TC1_CODCONEX
                     ) ON TC1_CODCONEX = I.TRAFO
    WHERE TRUNC(FINICIAL) >= TRUNC(FECHAOPERACION) - 04 / 24
    AND   TRUNC(FINICIAL) <= TRUNC(FECHAOPERACION) + 24 / 24
    AND M.TIPO <> 'PRUEBA' 
    AND M.EJECUTADO = 1
    AND I.TYPEEQUIP IN ('Transformer')
    AND TC1_CODCONEX IS NOT NULL
    AND (I.FFINAL - I.FINICIAL) * 24 >= 3 --HRS
    ;
    
	COMMIT;

	INSERT INTO QA_TFDDREGISTRO_AI
	SELECT A.FDD_CODIGOEVENTO
	          ,A.FDD_FINICIAL
	          ,A.FDD_FFINAL
	          ,A.FDD_DESCRIPCION
	          ,A.FDD_CAUSANTE_AFECTADO
	          ,A.FDD_CODIGOELEMENTO
	          ,A.FDD_TIPOELEMENTO
	          ,A.FDD_CAUSA
	          ,A.FDD_FESTIMADA
	          ,A.FDD_AFECTADOS
	          ,U.FDD_AFECTADOS_TOTALES
	FROM QA_TFDDREGISTRO_AI A
	LEFT OUTER JOIN (
					SELECT FDD_CODIGOEVENTO , SUM(CANT_USERS) AS FDD_AFECTADOS_TOTALES 
							FROM(
					   			 SELECT FDD_CODIGOEVENTO,FDD_CODIGOELEMENTO,CANT_USERS  
								 FROM QA_TFDDREGISTRO_AI
								 LEFT OUTER JOIN (SELECT TC1_CODCONEX, COUNT(TC1_CODCONEX) AS CANT_USERS 
								 				  FROM QA_TTC1 
												  WHERE TC1_PERIODO = MAX_PERIODO_TC1
												  AND   TC1_CODCONEX NOT LIKE 'ALPM%'
												  AND   TC1_TIPCONEX = 'T'
												  GROUP BY TC1_CODCONEX) ON TC1_CODCONEX = FDD_CODIGOELEMENTO			 
								 ) 
					GROUP BY FDD_CODIGOEVENTO 			 				
					) U ON U.FDD_CODIGOEVENTO = A.FDD_CODIGOEVENTO
	;

	COMMIT;

	DELETE 
	FROM QA_TFDDREGISTRO_AI
	WHERE FDD_AFECTADOS_TOTALES IS NULL;
	COMMIT;

	DELETE
	FROM QA_TFDDREGISTRO_AI
	WHERE FDD_AFECTADOS_TOTALES < 50000;
	COMMIT;

	SELECT COUNT(1) 
	INTO CANT_REG_AI
	FROM QA_TFDDREGISTRO_AI;

	IF (CANT_REG_AI > 0) THEN
		EXISTENCIA := 1; --EXISTE EVENTO DE ALTO IMPACTO
		--DBMS_OUTPUT.PUT_LINE('EXISTE EVENTO DE ALTO IMPACTO');
		INSERT INTO QA_TLOG_EJECUCION
        SELECT SYSDATE,'QA_PFDDREGISTRO_AI','PROCEDIMIENTO',UPPER(sys_context('USERENV','OS_USER')),'EXITOSO','Se ha configurado un EVENTO DE ALTO IMPACTO' FROM DUAL;
       	COMMIT;
	ELSE
		EXISTENCIA := 0; --NO EXISTE EVENTO DE ALTO IMPACTO
		--DBMS_OUTPUT.PUT_LINE('NO EXISTE EVENTO DE ALTO IMPACTO');
        INSERT INTO QA_TLOG_EJECUCION
	    SELECT SYSDATE,'QA_PFDDREGISTRO_AI','PROCEDIMIENTO',UPPER(sys_context('USERENV','OS_USER')),'FALLIDO','No existe un EVENTO DE ALTO IMPACTO' FROM DUAL;
	END IF;


END QA_PFDDREGISTRO_AI;

--TRAER CODIGO IUA PARA EL REPORTE