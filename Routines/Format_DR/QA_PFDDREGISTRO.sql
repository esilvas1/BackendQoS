CREATE OR REPLACE PROCEDURE BRAE.QA_PFDDREGISTRO(FECHAOPERACION DATE)
AS

  CONTADOR           NUMBER;
  CANTIDAD           NUMBER;
  FECHACONSUMO       DATE;
  PERIODO_MAX_TC1    NUMBER;
  FECHAREGISTRO      DATE;

  TYPE T_QA_TFDDREGISTRO IS TABLE OF QA_TFDDREGISTRO%ROWTYPE;
  V_QA_TFDDREGISTRO T_QA_TFDDREGISTRO;

   --VAR_A
  TYPE RECORD_A IS RECORD
  ( TC1_CODCONEX       BRAE.QA_TTC1.TC1_CODCONEX%TYPE);
  TYPE TABLE_A IS TABLE OF RECORD_A;
  VAR_A TABLE_A;


  --VAR_B
  TYPE RECORD_B IS RECORD
  ( FDD_CODIGOEVENTO       BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE,
    FDD_SUMA               NUMBER
  );
  TYPE TABLE_B IS TABLE OF RECORD_B;
  VAR_B TABLE_B;

  --VAR_C
  TYPE RECORD_C IS RECORD
  ( FDC_CAUSA_OMS         BRAE.QA_TFDDCAUSAS.FDC_CAUSA_OMS%TYPE,
    FDC_EXCLUSION     BRAE.QA_TFDDCAUSAS.FDC_EXCLUSION%TYPE
  );
  TYPE TABLE_C IS TABLE OF RECORD_C;
  VAR_C TABLE_C;


  --VAR_D
  TYPE RECORD_D IS RECORD
  ( FDC_CAUSA_OMS         BRAE.QA_TFDDCAUSAS.FDC_CAUSA_OMS%TYPE,
    FDC_CAUSA_SSPD        BRAE.QA_TFDDCAUSAS.FDC_CAUSA_SSPD%TYPE
  );
  TYPE TABLE_D IS TABLE OF RECORD_D;
  VAR_D TABLE_D;

--VAR_E
TYPE RECORD_E IS RECORD
(
  FDD_CODIGOEVENTO     BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE,
  FDD_FINICIAL         BRAE.QA_TFDDREGISTRO.FDD_FINICIAL%TYPE,
  FDD_FFINAL           BRAE.QA_TFDDREGISTRO.FDD_FFINAL%TYPE,
  FDD_CODIGOELEMENTO   BRAE.QA_TFDDREGISTRO.FDD_CODIGOELEMENTO%TYPE
);
TYPE TABLE_E IS TABLE OF RECORD_E;
VAR_E TABLE_E;

--VAR_F
TYPE RECORD_F IS RECORD
(
  FDD_CODIGOEVENTO     BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE,
  FDD_FINICIAL         BRAE.QA_TFDDREGISTRO.FDD_FINICIAL%TYPE,
  FDD_FFINAL           BRAE.QA_TFDDREGISTRO.FDD_FFINAL%TYPE,
  FDD_CODIGOELEMENTO   BRAE.QA_TFDDREGISTRO.FDD_CODIGOELEMENTO%TYPE
);
TYPE TABLE_F IS TABLE OF RECORD_F;
VAR_F TABLE_F;

 --VAR_G
  TYPE RECORD_G IS RECORD
  ( TC1_CODCONEX    BRAE.QA_TTC1.TC1_CODCONEX%TYPE,
    TC1_IUA         BRAE.QA_TTC1.TC1_IUA%TYPE
  );
  TYPE TABLE_G IS TABLE OF RECORD_G;
  VAR_G TABLE_G;

  --VAR_H
  TYPE RECORD_H IS RECORD
  ( ELEMENTO      QA_TCONSUMOSDIA.CONS_ELEMENTO%TYPE,
    CONSUMO       QA_TCONSUMOSDIA.CONS_DIARIO%TYPE);
  TYPE TABLE_H IS TABLE OF RECORD_H;
  VAR_H TABLE_H;

  --VAR_I
  TYPE RECORD_I IS RECORD
  ( FDD_CODIGOEVENTO    BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE);
  TYPE TABLE_I IS TABLE OF RECORD_I;
  VAR_I TABLE_I;

  --VAR_J
  TYPE RECORD_J IS RECORD
  ( CAUSA_OR   OMS.CAUSAS.CODE%TYPE,
    CAUSA015   OMS.CAUSAS.CAUSA015%TYPE);
  TYPE TABLE_J IS TABLE OF RECORD_J;
  VAR_J TABLE_J;


  --VAR_K
  TYPE RECORD_K IS RECORD
  ( FDD_CODIGOEVENTO     BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE,
    FDD_CODIGOELEMENTO   BRAE.QA_TFDDREGISTRO.FDD_CODIGOELEMENTO%TYPE);
  TYPE TABLE_K IS TABLE OF RECORD_K;
  VAR_K TABLE_K;

  --VAR_L
  TYPE RECORD_L IS RECORD
  ( FDD_CODIGOEVENTO     BRAE.QA_TFDDREGISTRO.FDD_CODIGOEVENTO%TYPE,
    MIN_IZQ              DATE,
    MAX_DER              DATE,
    VAL_IZQ              NUMBER,
    VAL_DER              NUMBER);
  TYPE TABLE_L IS TABLE OF RECORD_L;
  VAR_L TABLE_L;


BEGIN

  --EXTRAER LAS FECHAS PRINCIPALES PARA EL CALCULO DE LOS CONSUMOS Y PARA LA CANTDAD DE USUARIOS POR MES
  --DETERMINAR CANTIDAD DE REGISTROS Y CANTIDAD DE REPORTE ANTERIOR

    SELECT COUNT(*)
      INTO CONTADOR
      FROM BRAE.QA_TFDDREGISTRO
     WHERE FDD_PERIODO_OP =  TRUNC(FECHAOPERACION);

    SELECT COUNT(*)
      INTO CANTIDAD
      FROM BRAE.QA_TFDDREPORTE
     WHERE FDR_PERIODO_OP = (TRUNC(FECHAOPERACION) - 1);

    SELECT MAX(CONS_PERIODO)          INTO FECHACONSUMO  FROM BRAE.QA_TCONSUMOSDIA;
    SELECT MAX(TC1_PERIODO)           INTO PERIODO_MAX_TC1     FROM BRAE.QA_TTC1;
    SELECT SYSDATE                    INTO FECHAREGISTRO FROM DUAL;


IF CONTADOR = 0 AND CANTIDAD > 0 THEN --NO PERMITE REPORTE DE INFORMACION SIN QUE SE HAYA REPORTADO EL DIA ANTERIOR

  --COLOCAR CADA REGISTRO EN LA TABLA QA_TFDDREGISTRO
		    SELECT REG.FDD_CODIGOEVENTO
							,REG.FDD_FINICIAL
							,REG.FDD_FFINAL
							,REG.FDD_CODIGOELEMENTO
							,'Transformer' AS FDD_TIPOELEMENTO
							,NULL AS FDD_CONSUMODIA        --RECALCULADO POR EL PL
							,NULL AS FDD_ENS_ELEMENTO      --RECALCULADO POR EL PL
							,NULL AS FDD_ENS_EVENTO        --RECALCULADO POR EL PL
							,NULL AS FDD_ENEG_EVENTO       --RECALCULADO POR EL PL
							,NULL AS FDD_ENEG_ELEMENTO     --RECALCULADO POR EL PL
							,NULL AS FDD_CODIGOGENERADOR   --RECALCULADO POR EL PL
							,REG.FDD_CAUSA
							,NULL AS FDD_CAUSA_CREG        --RECALCULADO POR EL PL
							,'N' AS FDD_USUARIOAP          --LO RECTIFICA EL PL
							,REG.FDD_CONTINUIDAD
							,'N' AS FDD_ESTADOREPORTE
							,'N' AS FDD_PUBLICADO
							,'N' AS FDD_RECONFIG
							,FECHAOPERACION AS FDD_PERIODO_OP
							,FECHAREGISTRO AS FDD_FREG_APERTURA
							,REG.FDD_FREG_CIERRE
							,NULL AS FDD_FPUB_APERTURA
							,NULL AS FDD_FPUB_CIERRE
                            ,TO_NUMBER(0) AS FDD_PERIODO_TC1
							,REG.FDD_TIPOCARGA
							,NULL AS FDD_EXCLUSION         --RECALCULADO POR EL PL
							,NULL AS FDD_CAUSA_SSPD        --RECALCULADO POR EL PL
							,'N'  AS FDD_AJUSTADO
							,'0'  AS FDD_TIPOAJUSTE
							,'NA' AS FDD_RADICADO
							,'NA' AS FDD_APROBADO
							,NULL AS FDD_IUA               --RECALCULADO POR EL PL
		  BULK COLLECT INTO V_QA_TFDDREGISTRO
		  FROM ( --1.1 CARGA DIARIA DE REGISTROS NUEVOS DR
		         SELECT  I.MINICIAL AS FDD_CODIGOEVENTO,
		                (CASE WHEN I.FINICIAL<TRUNC(FECHAOPERACION) THEN NULL ELSE TO_TIMESTAMP(TO_CHAR(TO_CHAR(I.FINICIAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MI.FECHAMS<0) THEN(0) ELSE(MI.FECHAMS) END)),3,'0')),'DD/MM/YYYY hh24:mi:ss.FF3') END) AS FDD_FINICIAL,
		                (CASE WHEN I.FFINAL>=TRUNC(FECHAOPERACION)+1 THEN NULL ELSE TO_TIMESTAMP(CASE WHEN I.FFINAL IS NULL THEN NULL ELSE TO_CHAR(TO_CHAR(I.FFINAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MF.FECHAMS<0) THEN(0) ELSE(MF.FECHAMS) END)),3,'0')) END,'DD/MM/YYYY hh24:mi:ss.FF3') END) AS FDD_FFINAL,
		                I.TRAFO AS FDD_CODIGOELEMENTO,
		                MI.CAUSA AS FDD_CAUSA,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN 'S'           ELSE 'N'           END) AS FDD_CONTINUIDAD,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN NULL ELSE FECHAREGISTRO END) AS FDD_FREG_CIERRE,
		                'DR' AS FDD_TIPOCARGA
		        FROM OMS.INTERUPC I
		        LEFT OUTER JOIN OMS.MANIOBRAS MI ON MI.CODE = I.MINICIAL
		        LEFT OUTER JOIN OMS.MANIOBRAS MF ON MF.CODE = I.MFINAL
		        LEFT OUTER JOIN OMS.CAUSAS CS ON CS.CODE = MI.CAUSA
                LEFT OUTER JOIN QA_TFDDREGISTRO R ON (R.FDD_CODIGOEVENTO = I.MINICIAL AND R.FDD_CODIGOELEMENTO = I.TRAFO)
		        WHERE MI.CAUSA <> 'PRUEBA'
		        AND MI.TIPO <> 'PRUEBA' ---REVISA ENERGY
		        AND MI.EJECUTADO = 1
		        AND I.TYPEEQUIP IN ('Transformer')
                AND R.FDD_CODIGOEVENTO IS NULL --CONDICION PARA NUEVOS REGISTROS  
                AND ((I.FINICIAL >= TRUNC(FECHAOPERACION) AND I.FINICIAL < TRUNC(FECHAOPERACION) + 1)
		              --OR (I.FFINAL >= TRUNC(FECHAOPERACION) AND I.FFINAL < TRUNC(FECHAOPERACION) + 1)
                    )
          UNION ALL --1.2 CARGA DE CIERRES DR
		         SELECT  I.MINICIAL AS FDD_CODIGOEVENTO,
		                 NULL AS FDD_FINICIAL,
		                (CASE WHEN I.FFINAL>=TRUNC(FECHAOPERACION)+1 THEN NULL ELSE TO_TIMESTAMP(CASE WHEN I.FFINAL IS NULL THEN NULL ELSE TO_CHAR(TO_CHAR(I.FFINAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MF.FECHAMS<0) THEN(0) ELSE(MF.FECHAMS) END)),3,'0')) END,'DD/MM/YYYY hh24:mi:ss.FF3') END) AS FDD_FFINAL,
		                I.TRAFO AS FDD_CODIGOELEMENTO,
		                MI.CAUSA AS FDD_CAUSA,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN 'S'           ELSE 'N'           END) AS FDD_CONTINUIDAD,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN NULL ELSE FECHAREGISTRO END) AS FDD_FREG_CIERRE,
		                'DR' AS FDD_TIPOCARGA
		        FROM OMS.INTERUPC I
		        LEFT OUTER JOIN OMS.MANIOBRAS MI ON MI.CODE = I.MINICIAL
		        LEFT OUTER JOIN OMS.MANIOBRAS MF ON MF.CODE = I.MFINAL
		        LEFT OUTER JOIN OMS.CAUSAS CS ON CS.CODE = MI.CAUSA
                LEFT OUTER JOIN QA_TFDDREGISTRO R ON (R.FDD_CODIGOEVENTO = I.MINICIAL AND R.FDD_CODIGOELEMENTO = I.TRAFO)
		        WHERE MI.CAUSA <> 'PRUEBA'
		        AND MI.TIPO <> 'PRUEBA' ---REVISA ENERGY
		        AND MI.EJECUTADO = 1
		        AND I.TYPEEQUIP IN ('Transformer')
                AND R.FDD_CODIGOEVENTO IS NOT NULL AND R.FDD_FFINAL IS NULL --CONDICION PARA CIERRES DE EVENTOS DR
                AND (--(I.FINICIAL >= TRUNC(FECHAOPERACION) AND I.FINICIAL < TRUNC(FECHAOPERACION) + 1) OR
		               (I.FFINAL >= TRUNC(FECHAOPERACION) AND I.FFINAL < TRUNC(FECHAOPERACION) + 1)) 
		  UNION ALL --2. CARGA DE CIERRES TARDIOS
		        SELECT  I.MINICIAL AS FDD_CODIGOEVENTO,
		                NULL AS FDD_FINICIAL,
		                FECHAOPERACION + (1/86400) AS FDD_FFINAL,
		                --TO_TIMESTAMP(CASE WHEN I.FFINAL IS NULL THEN NULL ELSE TO_CHAR(TO_CHAR(I.FFINAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MF.FECHAMS<0) THEN(0) ELSE(MF.FECHAMS) END)),3,'0')) END,'DD/MM/YYYY hh24:mi:ss.FF3') AS FDD_FFINAL,
		                I.TRAFO AS FDD_CODIGOELEMENTO,
		                MI.CAUSA AS FDD_CAUSA,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN 'S'           ELSE 'N'           END) AS FDD_CONTINUIDAD,
		                (CASE WHEN (I.FFINAL>=TRUNC(FECHAOPERACION)+1 OR I.FFINAL IS NULL) THEN NULL ELSE FECHAREGISTRO END) AS FDD_FREG_CIERRE,
		                'DR' AS FDD_TIPOCARGA
		        FROM OMS.INTERUPC I
		        LEFT OUTER JOIN OMS.MANIOBRAS MI ON MI.CODE = I.MINICIAL
		        LEFT OUTER JOIN OMS.MANIOBRAS MF ON MF.CODE = I.MFINAL
		        LEFT OUTER JOIN OMS.CAUSAS CS ON CS.CODE = MI.CAUSA
		        WHERE MI.CAUSA <> 'PRUEBA'
		        AND MI.TIPO <> 'PRUEBA' ---REVISA ENERGY
		        AND MI.EJECUTADO = 1
		        AND I.TYPEEQUIP IN ('Transformer')
		        AND (I.FFINAL >= TO_DATE('01/'||TO_CHAR(FECHAOPERACION,'MM/YYYY'),'DD/MM/YYYY') AND I.FFINAL < TRUNC(FECHAOPERACION))
		        AND I.MINICIAL||I.TRAFO IN (SELECT FDD_CODIGOEVENTO||FDD_CODIGOELEMENTO FROM QA_TFDDREGISTRO WHERE FDD_FFINAL IS NULL)
		  UNION ALL --3. CARGA DE REGISTROS NR
            SELECT  I.MINICIAL AS FDD_CODIGOEVENTO
                    ,TO_TIMESTAMP(TO_CHAR(TO_CHAR(I.FINICIAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MI.FECHAMS<0) THEN(0) ELSE(MI.FECHAMS) END)),3,'0')),'DD/MM/YYYY hh24:mi:ss.FF3') AS FDD_FINICIAL
                    ,(CASE WHEN I.FFINAL>=FECHAOPERACION + 1 THEN NULL ELSE TO_TIMESTAMP(CASE WHEN I.FFINAL IS NULL THEN NULL ELSE TO_CHAR(TO_CHAR(I.FFINAL,'DD/MM/YYYY hh24:mi:ss')||'.'||LPAD(TO_CHAR((CASE WHEN (MF.FECHAMS<0) THEN(0) ELSE(MF.FECHAMS) END)),3,'0')) END,'DD/MM/YYYY hh24:mi:ss.FF3') END) AS FDD_FFINAL
                    ,I.TRAFO AS FDD_CODIGOELEMENTO
                    ,MI.CAUSA AS FDD_CAUSA
                    ,(CASE WHEN (I.FFINAL>=FECHAOPERACION + 1 OR I.FFINAL IS NULL) THEN 'S'  ELSE 'N'           END) AS FDD_CONTINUIDAD
                    ,(CASE WHEN (I.FFINAL>=FECHAOPERACION + 1 OR I.FFINAL IS NULL) THEN NULL ELSE FECHAREGISTRO END) AS FDD_FREG_CIERRE
                    ,'NR' AS FDD_TIPOCARGA
              FROM  OMS.INTERUPC I
              LEFT  OUTER JOIN OMS.MANIOBRAS MI ON MI.CODE = I.MINICIAL
              LEFT  OUTER JOIN OMS.MANIOBRAS MF ON MF.CODE = I.MFINAL
              LEFT  OUTER JOIN QA_TFDDREGISTRO R ON (R.FDD_CODIGOEVENTO = I.MINICIAL AND R.FDD_CODIGOELEMENTO = I.TRAFO)
              WHERE MI.CAUSA <> 'PRUEBA'
              AND   MI.TIPO  <> 'PRUEBA'
              AND   MI.EJECUTADO = 1
              AND   I.TYPEEQUIP IN ('Transformer')
              AND   (    I.FINICIAL >= TO_DATE('01/'||TO_CHAR(FECHAOPERACION,'MM/YYYY'),'DD/MM/YYYY')
                     AND I.FINICIAL <  FECHAOPERACION
                    )
              AND   R.FDD_CODIGOEVENTO IS NULL
		        ) REG;

      FOR i IN V_QA_TFDDREGISTRO.FIRST .. V_QA_TFDDREGISTRO.LAST LOOP
          IF V_QA_TFDDREGISTRO(i).FDD_FINICIAL IS NULL THEN
              UPDATE BRAE.QA_TFDDREGISTRO
              SET
                  FDD_FFINAL=V_QA_TFDDREGISTRO(i).FDD_FFINAL,
                  FDD_CONSUMODIA=V_QA_TFDDREGISTRO(i).FDD_CONSUMODIA,
                  FDD_ENS_ELEMENTO=V_QA_TFDDREGISTRO(i).FDD_ENS_ELEMENTO,
                  FDD_PERIODO_OP=V_QA_TFDDREGISTRO(i).FDD_PERIODO_OP,
                  FDD_CONTINUIDAD='N',
                  FDD_RECONFIG='S',
                  FDD_ESTADOREPORTE='N',
                  FDD_PUBLICADO='N',
                  FDD_FREG_CIERRE=FECHAREGISTRO
                WHERE FDD_CODIGOEVENTO=V_QA_TFDDREGISTRO(i).FDD_CODIGOEVENTO
                AND   FDD_CODIGOELEMENTO=V_QA_TFDDREGISTRO(i).FDD_CODIGOELEMENTO;
          ELSE
                  INSERT INTO BRAE.QA_TFDDREGISTRO
                  VALUES V_QA_TFDDREGISTRO(i);
          END IF;
      END LOOP;
      COMMIT;

     --MARCAR EL CAMPO FDD_PERIODO_TC1 CON 'TC1_PERIODO' PARA TODOS LOS REGISTROS

		    SELECT DISTINCT(TC1_CODCONEX)
		    BULK   COLLECT INTO VAR_A
		    FROM   BRAE.QA_TTC1
		    LEFT OUTER JOIN (
		                     SELECT DISTINCT FDD_CODIGOELEMENTO
                         FROM QA_TFDDREGISTRO
                         WHERE FDD_PERIODO_OP = TRUNC(FECHAOPERACION)
                        )  ON FDD_CODIGOELEMENTO=TC1_CODCONEX
		    WHERE  TC1_PERIODO = PERIODO_MAX_TC1
		    AND FDD_CODIGOELEMENTO IS NOT NULL;

        IF VAR_A IS NOT EMPTY THEN
		        FORALL i IN VAR_A.FIRST .. VAR_A.LAST
		            UPDATE BRAE.QA_TFDDREGISTRO
		            SET    FDD_PERIODO_TC1    =  PERIODO_MAX_TC1
		            WHERE  FDD_PERIODO_OP     =  TRUNC(FECHAOPERACION)
		            AND    FDD_CODIGOELEMENTO =  VAR_A(i).TC1_CODCONEX
		            AND    FDD_RECONFIG       <> 'S';
		        COMMIT;
        END IF;

    -- ELIMINA DE LA TABLA DE REGISTROS LOS EVENTOS CON TRANSFORMADORES QUE NO ESTAN EN EL FORMATO 1

        DELETE FROM BRAE.QA_TFDDREGISTRO
        WHERE FDD_PERIODO_TC1=0;
        COMMIT;


    --ELIMINAR LOS REGISTROS NR AGREGADOS POR AJUSTE TC1; FDD_TIPOCARGA='AJUSTE TC1'

                    SELECT DISTINCT T1.FDD_CODIGOEVENTO
                    BULK COLLECT INTO VAR_I
										FROM   QA_TFDDREGISTRO T1
                    LEFT   OUTER JOIN (
                                      SELECT DISTINCT FDD_CODIGOEVENTO
                                      FROM   QA_TFDDREGISTRO
                                      WHERE(
                                                FDD_FINICIAL >= TO_DATE('01/'||TO_CHAR(FECHAOPERACION,'MM/YYYY'),'DD/MM/YYYY')
                                            AND FDD_FINICIAL <  FECHAOPERACION
                                            AND FDD_TIPOCARGA <> 'NR'
                                           )
                                       ) T2 ON T2.FDD_CODIGOEVENTO=T1.FDD_CODIGOEVENTO
										WHERE  T1.FDD_PERIODO_OP =  FECHAOPERACION
										AND    T1.FDD_TIPOCARGA  = 'NR'
										AND    T2.FDD_CODIGOEVENTO  IS NOT NULL;


                  IF VAR_I IS NOT NULL THEN
                      FORALL i IN VAR_I.FIRST .. VAR_I.LAST
                        DELETE
                          FROM QA_TFDDREGISTRO
                         WHERE FDD_CODIGOEVENTO   = VAR_I(i).FDD_CODIGOEVENTO
                           AND FDD_TIPOCARGA      = 'NR'
                           AND FDD_PERIODO_OP     = FECHAOPERACION;
                  END IF;
                  COMMIT;

    /*MARCAR EL CAMPO FDD_USUARIOAP CON 'S' PARA TODOS LOS REGISTROS
    ALMACENADOS EN EL PERIODO_OP CON TRANSFORMADORES CON ALUMABRADO PUBLICO*/

          SELECT DISTINCT TC1_CODCONEX
            BULK COLLECT INTO VAR_A
            FROM QA_TTC1 TC1
            LEFT OUTER JOIN (
                             SELECT DISTINCT FDD_CODIGOELEMENTO
                             FROM   QA_TFDDREGISTRO
                             WHERE  FDD_PERIODO_OP       = TRUNC(FECHAOPERACION)
                            ) R  ON R.FDD_CODIGOELEMENTO = TC1.TC1_CODCONEX
           WHERE TC1_PERIODO = PERIODO_MAX_TC1
             AND TC1_TC1 LIKE 'CALP%'
             AND R.FDD_CODIGOELEMENTO IS NOT NULL;

        IF VAR_A IS NOT EMPTY THEN
             FOR i IN VAR_A.FIRST..VAR_A.LAST LOOP
                   UPDATE BRAE.QA_TFDDREGISTRO
                   SET    FDD_USUARIOAP='S'
                   WHERE  FDD_CODIGOELEMENTO = VAR_A(i).TC1_CODCONEX
                   AND    FDD_PERIODO_OP     = TRUNC(FECHAOPERACION);
             END LOOP;
             COMMIT;
        END IF;

         --AGRAGAR LOS CONSUMOS A LOS TRAFOS

              SELECT DISTINCT CON.CONS_ELEMENTO,CON.CONS_DIARIO
                  BULK COLLECT INTO VAR_H
                  FROM BRAE.QA_TCONSUMOSDIA CON
                  LEFT OUTER JOIN (SELECT DISTINCT FDD_CODIGOELEMENTO
                                     FROM QA_TFDDREGISTRO
                                    WHERE FDD_PERIODO_OP = FECHAOPERACION
                                  ) PRE   ON PRE.FDD_CODIGOELEMENTO=CON.CONS_ELEMENTO
                WHERE CON.CONS_PERIODO = (SELECT MAX(CONS_PERIODO) FROM BRAE.QA_TCONSUMOSDIA)
                  AND PRE.FDD_CODIGOELEMENTO IS NOT NULL;

            IF VAR_H IS NOT EMPTY THEN
                FOR i IN VAR_H.FIRST..VAR_H.LAST LOOP
                    UPDATE BRAE.QA_TFDDREGISTRO
                    SET    FDD_CONSUMODIA     = VAR_H(i).CONSUMO
                    WHERE  FDD_CODIGOELEMENTO = VAR_H(i).ELEMENTO
                    AND    FDD_PERIODO_OP     = FECHAOPERACION;
                END LOOP;
                COMMIT;
            END IF;

    -- CALCUALAR ENS_ELEMENTO
            UPDATE BRAE.QA_TFDDREGISTRO
            SET FDD_ENS_ELEMENTO = FDD_CONSUMODIA*(CAST(FDD_FFINAL AS DATE)-CAST(FDD_FINICIAL AS DATE))
            WHERE FDD_PERIODO_OP = FECHAOPERACION;

      --COMPLETAR EL CAMPO ENS_EVENTO PARA TODOS LOS REGISTROS ALMACENADOS AL PERIODO_OP

				  SELECT FDD_CODIGOEVENTO,SUM(FDD_ENS_ELEMENTO)
				  BULK   COLLECT INTO VAR_B
				  FROM   BRAE.QA_TFDDREGISTRO
				  WHERE  FDD_PERIODO_OP=TRUNC(FECHAOPERACION)
				  GROUP  BY FDD_CODIGOEVENTO;

          IF VAR_B IS NOT EMPTY THEN
		          FORALL i IN VAR_B.FIRST .. VAR_B.LAST
		            UPDATE BRAE.QA_TFDDREGISTRO
		            SET    FDD_ENS_EVENTO   = VAR_B(i).FDD_SUMA
		            WHERE  FDD_PERIODO_OP   = FECHAOPERACION
		            AND    FDD_CODIGOEVENTO = VAR_B(i).FDD_CODIGOEVENTO;
		          COMMIT;
           END IF;

        --COMPLETAR EL CAMPO DE CAUSA_CREG_015

                SELECT CODE, CAUSA015
                BULK COLLECT INTO VAR_J
                FROM OMS.CAUSAS;

                FOR i IN VAR_J.FIRST .. VAR_J.LAST LOOP
                      UPDATE BRAE.QA_TFDDREGISTRO
                      SET    FDD_CAUSA_CREG = VAR_J(i).CAUSA015
                      WHERE  FDD_CAUSA      = VAR_J(i).CAUSA_OR
                      AND    FDD_PERIODO_OP = FECHAOPERACION;
                END LOOP;
                COMMIT;

      --COMPLETAR EL CAMPO FDD_EXCLUSION PARA TODOS LOS REGISTROS ALMACENADOS AL PERIODO_OP

			   SELECT FDC_CAUSA_OMS,FDC_EXCLUSION
			   BULK   COLLECT INTO VAR_C
			   FROM   BRAE.QA_TFDDCAUSAS
			   LEFT   OUTER JOIN (
	  		                    SELECT DISTINCT FDD_CAUSA
		  	                    FROM   QA_TFDDREGISTRO
			                      WHERE  FDD_PERIODO_OP = FECHAOPERACION
  			                   )
			                      ON FDD_CAUSA = FDC_CAUSA_OMS
         WHERE FDD_CAUSA IS NOT NULL;

         IF VAR_C IS NOT EMPTY THEN
			         FORALL i IN VAR_C.FIRST .. VAR_C.LAST
			            UPDATE BRAE.QA_TFDDREGISTRO
			            SET    FDD_EXCLUSION  = VAR_C(i).FDC_EXCLUSION
			            WHERE  FDD_PERIODO_OP = FECHAOPERACION
			            AND    FDD_CAUSA      = VAR_C(i).FDC_CAUSA_OMS
			            AND    FDD_RECONFIG   = 'N';
			         COMMIT;
         END IF;

      --COMPLETAR EL CAMPO FDD_CAUSA_SSPD PARA TODOS LOS REGISTROS ALMACENADOS AL PERIODO_OP

			   SELECT FDC_CAUSA_OMS,FDC_CAUSA_SSPD
			   BULK   COLLECT INTO VAR_D
			   FROM   BRAE.QA_TFDDCAUSAS
			   LEFT   OUTER JOIN (
			                      SELECT DISTINCT FDD_CAUSA
			                      FROM QA_TFDDREGISTRO
			                      WHERE FDD_PERIODO_OP = FECHAOPERACION
			                     ) ON FDD_CAUSA = FDC_CAUSA_OMS
			   WHERE FDD_CAUSA IS NOT NULL;


			   IF VAR_D IS NOT EMPTY THEN
			     FORALL i IN VAR_D.FIRST .. VAR_D.LAST
                UPDATE BRAE.QA_TFDDREGISTRO
                SET FDD_CAUSA_SSPD =
                        (CASE
                            WHEN (  (  TO_DATE (
                                          TO_CHAR (FDD_FFINAL, 'DD/MM/YYYY hh24:mi:ss'),
                                          'DD/MM/YYYY hh24:mi:ss')
                                    - TO_DATE (
                                          TO_CHAR (FDD_FINICIAL, 'DD/MM/YYYY hh24:mi:ss'),
                                          'DD/MM/YYYY hh24:mi:ss'))
                                  * 24) <= 0.05
                            THEN
                              1
                            ELSE
                              NVL (VAR_D(i).FDC_CAUSA_SSPD, 0)
                        END)
              WHERE FDD_PERIODO_OP=TRUNC(FECHAOPERACION)
              AND FDD_CAUSA = VAR_D(i).FDC_CAUSA_OMS;
			   END IF;
        COMMIT;


      -- VERIFICAR CAUSAS_SSPD ASIGNADAS CON EL VALOR DIFERENTE DE '1'

				  --CURSOR C_EVENSMALL
				    SELECT I.MINICIAL,
				           I.FINICIAL,
				           I.FFINAL,
				           I.TRAFO
				   BULK COLLECT INTO VAR_E
				   FROM OMS.INTERUPC I
				   WHERE I.FINICIAL >= TO_DATE(TO_CHAR(TRUNC(FECHAOPERACION)+(23.95/24),'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS')
				   AND I.FINICIAL < TRUNC (FECHAOPERACION+1)
				   AND I.FFINAL IS NOT NULL
				   AND ((I.FFINAL-I.FINICIAL)*24)<=0.05;

           IF VAR_E IS NOT EMPTY THEN
           FOR i IN VAR_E.FIRST .. VAR_E.LAST LOOP


						     --CURSOR C_EVENSSPD
						     SELECT FDD_CODIGOEVENTO,
						          FDD_FINICIAL,
						          FDD_FFINAL,
						          FDD_CODIGOELEMENTO
					       BULK COLLECT INTO VAR_F
						     FROM BRAE.QA_TFDDREGISTRO
						     WHERE FDD_PERIODO_OP=TRUNC(FECHAOPERACION);

			           IF VAR_F IS NOT EMPTY THEN
			           FOR j IN VAR_F.FIRST .. VAR_F.LAST LOOP

			                IF (VAR_E(i).FDD_CODIGOEVENTO   = VAR_F(j).FDD_CODIGOEVENTO AND
			                    VAR_E(i).FDD_CODIGOELEMENTO = VAR_F(j).FDD_CODIGOELEMENTO) THEN
			                  -- CAMBIAR CAUSA_SSPD A 1 DE LA TABAL QA_TFDDREGISTRO
			                  UPDATE BRAE.QA_TFDDREGISTRO
			                  SET
			                    FDD_CAUSA_SSPD=1
			                    --,FDD_EXCLUSION='EXCLUIDA'
			                  WHERE FDD_PERIODO_OP=TRUNC(FECHAOPERACION)--CONDICION PARA QA_PFDDREGISTRO
			                  AND FDD_CODIGOEVENTO    = VAR_E(i).FDD_CODIGOEVENTO
			                  AND FDD_CODIGOELEMENTO  = VAR_E(i).FDD_CODIGOELEMENTO;
			                END IF;
			           END LOOP;
			           END IF;
           END LOOP;
           END IF;
           COMMIT;

     --MARCAR EL CAMPO FDD_IUA CON 'TC1_IUA' PARA TODOS LOS REGISTROS

			    SELECT DISTINCT(TC1_CODCONEX), TC1_IUA
			    BULK   COLLECT INTO VAR_G
			    FROM   BRAE.QA_TTC1
			    LEFT   OUTER JOIN (
                             SELECT DISTINCT FDD_CODIGOELEMENTO
                             FROM QA_TFDDREGISTRO
                             WHERE FDD_PERIODO_OP = FECHAOPERACION
			                      ) ON FDD_CODIGOELEMENTO = TC1_CODCONEX
			    WHERE TC1_PERIODO = PERIODO_MAX_TC1
			    AND   FDD_CODIGOELEMENTO IS NOT NULL;

          IF VAR_G IS NOT EMPTY THEN
		          FORALL i IN VAR_G.FIRST .. VAR_G.LAST
		            UPDATE BRAE.QA_TFDDREGISTRO
		            SET    FDD_IUA            = VAR_G(i).TC1_IUA
		            WHERE  FDD_PERIODO_OP     = FECHAOPERACION
		            AND    FDD_CODIGOELEMENTO = VAR_G(i).TC1_CODCONEX
		            AND    FDD_RECONFIG      <> 'S';
		          COMMIT;
          END IF;
          COMMIT;

 
  --MODIFICAR LOS EVENTOS NR QUE NO TRASLAPAN CON METODOLOGIA 1, PARA QUE SEAN REPORTADOS EN FECHAOPERACION ACTUAL (METODO CERO AFECTACIONES)

		SELECT A.FDD_CODIGOEVENTO
		BULK   COLLECT INTO VAR_I
		FROM   QA_TFDDREGISTRO A
		LEFT   JOIN (
		             SELECT DISTINCT FDD_CODIGOELEMENTO
		             FROM   QA_TFDDREGISTRO
		             WHERE  FDD_PERIODO_OP        =  FECHAOPERACION
		             AND    FDD_TIPOCARGA        <> 'NR'
  	            ) B ON  B.FDD_CODIGOELEMENTO  =  A.FDD_CODIGOELEMENTO
		WHERE A.FDD_PERIODO_OP =  FECHAOPERACION
		AND   A.FDD_TIPOCARGA  = 'NR'
		HAVING   COUNT(B.FDD_CODIGOELEMENTO)=0
		GROUP BY A.FDD_CODIGOEVENTO;

	  IF VAR_I IS NOT EMPTY THEN
	    FOR i IN VAR_I.FIRST .. VAR_I.LAST
	      LOOP
					  UPDATE QA_TFDDREGISTRO
					     SET FDD_FINICIAL   = (CASE WHEN(FDD_FFINAL IS NULL)                      THEN (FECHAOPERACION + 1 - (1/86400))
					                                WHEN(TRUNC(FDD_FFINAL)=TRUNC(FECHAOPERACION)) THEN (FECHAOPERACION + 0 + (1/86400))
					                                ELSE(
					                                    FECHAOPERACION + (i/86400)
					                                    )
					                          END
					                          )
					        ,FDD_FFINAL     = (CASE WHEN(FDD_FFINAL IS NULL)                      THEN (NULL)
					                                WHEN(TRUNC(FDD_FFINAL)=TRUNC(FECHAOPERACION)) THEN (FDD_FFINAL)
					                                ELSE(
					                                    FECHAOPERACION + ((i+1)/86400)
					                                    )
					                          END
					                          )
					        ,FDD_TIPOCARGA    = 'XR'
					  WHERE  FDD_TIPOCARGA    = 'NR'
					    AND  FDD_PERIODO_OP   = FECHAOPERACION
					    AND  FDD_CODIGOEVENTO = VAR_I(i).FDD_CODIGOEVENTO;
				END LOOP;
			END IF;
			COMMIT;



  --CONFIGURAR EVENTOS NR QUE TRASLAPAN CON EVENTOS DIARIOS METODO, TRIANGULO INVERTIDO

				SELECT FDD_CODIGOEVENTO
				     , MIN_IZQ - ROWNUM/86400
				     , MAX_DER + ROWNUM/86400
                     ,(
				        CASE WHEN((MIN_IZQ - ROWNUM/86400) >= TRUNC(FECHAOPERACION)+(2/86400))
				             THEN(1)
				             ELSE(0)
				        END
                      )AS VAL_IZQ
                     ,(
				        CASE WHEN((MAX_DER + ROWNUM/86400) <= TRUNC(FECHAOPERACION)+1-(2/86400))
				             THEN(1)
				             ELSE(0)
				        END
				       ) AS VAL_DER
				BULK COLLECT INTO VAR_L
				FROM(
                    SELECT T1.FDD_CODIGOEVENTO
                          ,(
                            CASE WHEN(TO_DATE(TO_CHAR(MIN(T2.FDD_FINICIAL),'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS')>=TRUNC(FECHAOPERACION)+(2/86400))
                                 THEN(TO_DATE(TO_CHAR(MIN(T2.FDD_FINICIAL),'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS'))
                                 ELSE(NULL)
                            END
                            ) AS MIN_IZQ
                          ,(
                            CASE WHEN(TO_DATE(TO_CHAR(MAX(T2.FDD_FFINAL)  ,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS')<=TRUNC(FECHAOPERACION)+1-(2/86400))
                                 THEN(TO_DATE(TO_CHAR(MAX(T2.FDD_FFINAL)  ,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS'))
                                 ELSE(NULL)
                            END
                            ) AS MAX_DER
                    FROM QA_TFDDREGISTRO T1
				LEFT OUTER JOIN ( SELECT FDD_CODIGOEVENTO,FDD_CODIGOELEMENTO
				                        ,FDD_FINICIAL    ,(CASE WHEN(FDD_FFINAL IS NULL) THEN(FECHAOPERACION + 1-(1/86400)) ELSE(FDD_FFINAL) END)AS FDD_FFINAL
													FROM QA_TFDDREGISTRO
													WHERE FDD_PERIODO_OP = FECHAOPERACION
													AND   FDD_TIPOCARGA <> 'NR'
                                )T2 ON T2.FDD_CODIGOELEMENTO = T1.FDD_CODIGOELEMENTO
				WHERE T1.FDD_PERIODO_OP = FECHAOPERACION
				AND   T1.FDD_TIPOCARGA = 'NR'
				AND   T2.FDD_CODIGOELEMENTO IS NOT NULL-- PARA NO TRAER LOS ELEMENTOS QUE NO TRASLAPARON PERO SI DEL EVENTO TRASLAPADO
				GROUP BY T1.FDD_CODIGOEVENTO
				ORDER BY MAX_DER ASC);

				IF VAR_L IS NOT EMPTY THEN
				  FOR i IN VAR_L.FIRST .. VAR_L.LAST
				    LOOP
						  UPDATE QA_TFDDREGISTRO
						     SET FDD_FINICIAL   = (CASE WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN(FECHAOPERACION + 1 - (1/86400))--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN(FECHAOPERACION + 1 - (2/86400))--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN(FECHAOPERACION + 1 - (1/86400))--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN(FECHAOPERACION + 1 - (2/86400))--DER
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN(NULL)            --DER DON'T
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN(VAR_L(i).MAX_DER)--DER
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN(VAR_L(i).MIN_IZQ)--IZQ
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN(VAR_L(i).MAX_DER)--DER
						                           END
						                           )
						        ,FDD_FFINAL     = (CASE WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN(NULL)
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN(NULL)
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN(NULL)
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN(NULL)
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN(NULL)                        --DER DON'T
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN(VAR_L(i).MAX_DER + (1/86400))--DER
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN(VAR_L(i).MIN_IZQ + (1/86400))--IZQ
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN(VAR_L(i).MAX_DER + (1/86400))--DER
						                           END
						                           )
						        ,FDD_TIPOCARGA  = (CASE WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN('XR')--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN('XR')--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN('XR')--DER
                                                        WHEN(FDD_FFINAL IS     NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN('XR')--DER
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 0) THEN('NR')--DER DON'T
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 0 AND VAR_L(i).VAL_DER = 1) THEN('XR')--DER
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 0) THEN('XR')--IZQ
                                                        WHEN(FDD_FFINAL IS NOT NULL AND VAR_L(i).VAL_IZQ = 1 AND VAR_L(i).VAL_DER = 1) THEN('XR')--DER
						                           END
						                           )
						  WHERE  FDD_TIPOCARGA    = 'NR'
						    AND  FDD_PERIODO_OP   = FECHAOPERACION
						    AND  FDD_CODIGOEVENTO = VAR_L(i).FDD_CODIGOEVENTO;
				    END LOOP;
				END IF;
				COMMIT;

  --ELIMINAR EVENTOS NR QUE TRASLAPAN CON EVENTOS DIARIOS DEL PERIODO_OP ACTUAL, SOLO SI LAST_DAY(FECHAOPERACION)<>FECHAOPERACION
   IF LAST_DAY(FECHAOPERACION) <> FECHAOPERACION THEN
		    DELETE
		    FROM   QA_TFDDREGISTRO
		    WHERE  FDD_PERIODO_OP   =  FECHAOPERACION
		    AND    FDD_TIPOCARGA    = 'NR';
    		COMMIT;
    END IF;

  --REVISAR Y AJUSTAR SI EXISTEN EVENTOS NR QUE HAN CERRADO CON CIERRES TARDIOS Y SU DURACION ES NEGATIVA

          SELECT FDD_CODIGOEVENTO
                ,FDD_CODIGOELEMENTO
          BULK   COLLECT INTO VAR_K
          FROM   QA_TFDDREGISTRO
					WHERE  FDD_PERIODO_OP = FECHAOPERACION
					AND    FDD_FFINAL IS NOT NULL
					AND   (TO_DATE(TO_CHAR(FDD_FFINAL  ,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS')  -
						     TO_DATE(TO_CHAR(FDD_FINICIAL,'DD/MM/YYYY HH24:MI:SS'),'DD/MM/YYYY HH24:MI:SS')) < 0;

          IF VAR_K IS NOT EMPTY THEN
		        FOR i IN VAR_K.FIRST .. VAR_K.LAST
		          LOOP
		            UPDATE QA_TFDDREGISTRO
		            SET   FDD_FFINAL         =  TRUNC(FECHAOPERACION)+(2/86400)
		            WHERE FDD_PERIODO_OP     =  FECHAOPERACION
		            AND   FDD_CODIGOEVENTO   =  VAR_K(i).FDD_CODIGOEVENTO
		            AND   FDD_CODIGOELEMENTO =  VAR_K(i).FDD_CODIGOELEMENTO
		            AND   FDD_RECONFIG       = 'S';
		          END LOOP;
          END IF;
          COMMIT;
          
    --ESCRITURA EN TABLA LOG
         INSERT INTO QA_TLOG_EJECUCION
         SELECT SYSDATE,'QA_PFDDREGISTRO','PROCEDIMIENTO','UNKNOWN','EXITOSO','NA' FROM DUAL;          
          
  ELSE
    --ESCRITURA EN TABLA LOG
         INSERT INTO QA_TLOG_EJECUCION
         SELECT SYSDATE,'QA_PFDDREGISTRO','PROCEDIMIENTO','UNKNOWN','FALLIDO','Intenta realizar un periodo ejecutado o un periodo anterior' FROM DUAL;  
  
  END IF; --NO PERMITE REPORTE DE INFORMACION SIN QUE SE HAYA REPORTADO EL DIA ANTERIOR

END QA_PFDDREGISTRO;






